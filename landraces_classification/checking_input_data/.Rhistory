hc_title(text = "Scatter chart with number of coordinates and total harvested area by country") %>%
hc_add_series_scatter(x = df$Count, y = df$Harvested.area, color = df$Harvested.area, label = df$Country)
plot_ly(df, x = df$Count, y = df$Harvested.area,
text = paste(df$Country),
mode = "markers", color = df$Harvested.area, size = df$Count)
df[which(df$Count > 0), c("Country", "Count", "Harvested.area")] %>% gather(key = Variable, value = Value, -Country) %>%
ggplot(aes(x = reorder(Country, Value), y = Value, fill = Variable)) +
geom_bar(stat = "identity", position = position_dodge()) +
scale_fill_brewer(palette = "Paired") + theme_minimal() +
xlab("Country") + ylab("Standarized value") + theme(axis.text.x = element_text(angle = 90))
rownames(df) <- df$Country
earthstat <- raster::brick("D:/ToBackup/climate_and_crop_modelling/cwr-landraces/Input_data/EarthStat_data/bean_HarvAreaYield2000_NetCDF/bean_AreaYieldProduction.nc", lvar = 4)
earthstat <- earthstat[[5]]
root
earthstat <- raster::brick(paste0(root, "/gap_analysis_landraces/Input_data/_crop_areas/EarthStat/Bean/bean_AreaYieldProduction.nc"), lvar = 4)
earthstat <- earthstat[[5]]
sheet_names <- excel_sheets(paste0(root, "/gap_analysis_landraces/Input_data/_ocurrence_data/_usda_data/Bean/GRIN_GLOBAL_BEAN_LAND.xlsx"))
sheet_names
GRIN <- lapply(sheet_names, function(x){
read_excel(path = filename, sheet = x)
}); names(GRIN) <- sheet_names; rm(sheet_names, filename)
View(ciat_landraces)
ciat_landraces$Seed_color
table(ciat_landraces$Seed_color)
unique(as.character(ciat_landraces$Seed_color))
grep(pattern = "blue", x = unique(as.character(ciat_landraces$Seed_color)))
load("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/19-BID-reanalysis/Bean/historical/final/BEAN_rainfed_ICTAOstua_WFD.RDat")
Run[[28]] %>% View()
lapply(Run, function(x){
dur <- x$MDAT - x$PDAT
return(dur)
})
Run[[935]] %>% View
Run[[935]]$MDAT%%1000
x$MDAT <- x$MDAT%%1000
lapply(Run, function(x){
x$MDAT <- x$MDAT%%1000
x$PDAT <- x$PDAT%%1000
dur <- ifelse(test = x$MDAT > x$PDAT, yes = x$MDAT - x$PDAT, no = 365 - x$PDAT + x$MDAT)
return(dur)
})
res <- lapply(Run, function(x){
x$MDAT <- x$MDAT%%1000
x$PDAT <- x$PDAT%%1000
dur <- ifelse(test = x$MDAT > x$PDAT, yes = x$MDAT - x$PDAT, no = 365 - x$PDAT + x$MDAT)
return(dur)
})
res <- do.call(c, res)
res %>% hist
Run[[28]] %>% View
Run[[948]] %>% View
res <- lapply(Run, function(x){
x$MDAT <- x$MDAT%%1000
x$PDAT <- x$PDAT%%1000
x[which(x == "-99")] <- NA
dur <- ifelse(test = x$MDAT > x$PDAT, yes = x$MDAT - x$PDAT, no = 365 - x$PDAT + x$MDAT)
return(dur)
})
res <- lapply(Run, function(x){
end <- x$MDAT
start <- x$PDAT
end <- end[which(end != -99)]
start <- start[which(start != -99)]
end <- end%%1000
start <- start%%1000
dur <- ifelse(test = end > start, yes = end - start, no = 365 - start + end)
return(dur)
})
res <- do.call(c, res)
res %>% hist
hist(res, main = "ICTA Ostua duration: new runs MDAT - PDAT")
hist(res, main = "ICTA Ostua duration: new runs (MDAT - PDAT)")
load("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/12-Resultados/Frijol/Frijol-3cultivars_withCO2/_Frijol_Secano_ICTAOstua_WFD.RDat")
res <- lapply(Run, function(x){
end <- x$MDAT
start <- x$PDAT
end <- end[which(end != -99)]
start <- start[which(start != -99)]
end <- end%%1000
start <- start%%1000
dur <- ifelse(test = end > start, yes = end - start, no = 365 - start + end)
return(dur)
})
res <- do.call(c, res)
hist(res, main = "ICTA Ostua duration: new runs (MDAT - PDAT)")
load("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/19-BID-reanalysis/Bean/historical/final/BEAN_rainfed_ICTAOstua_WFD.RDat")
res <- lapply(Run, function(x){
end <- x$MDAT
start <- x$PDAT
end <- end[which(end != -99)]
start <- start[which(start != -99)]
end <- end%%1000
start <- start%%1000
dur <- ifelse(test = end > start, yes = end - start, no = 365 - start + end)
return(dur)
})
res <- do.call(c, res)
hist(res, main = "ICTA Ostua duration: new runs (MDAT - PDAT)")
load("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/12-Resultados/Frijol/Frijol-3cultivars_withCO2/_Frijol_Secano_ICTAOstua_WFD.RDat")
res <- lapply(Run, function(x){
end <- x$MDAT
start <- x$PDAT
end <- end[which(end != -99)]
start <- start[which(start != -99)]
end <- end%%1000
start <- start%%1000
dur <- ifelse(test = end > start, yes = end - start, no = 365 - start + end)
return(dur)
})
res <- do.call(c, res)
hist(res, main = "ICTA Ostua duration: old runs (MDAT - PDAT)")
load("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/19-BID-reanalysis/Bean/historical/final/BEAN_rainfed_ICTAOstua_WFD.RDat")
res <- lapply(Run, function(x){
end <- x$MDAT
start <- x$SDAT # SDAT
end <- end[which(end != -99)]
start <- start[which(start != -99)]
end <- end%%1000
start <- start%%1000
dur <- ifelse(test = end > start, yes = end - start, no = 365 - start + end)
return(dur)
})
res <- do.call(c, res)
hist(res, main = "ICTA Ostua duration: new runs (MDAT - PDAT)")
load("//dapadfs/workspace_cluster_3/bid-cc-agricultural-sector/12-Resultados/Frijol/Frijol-3cultivars_withCO2/_Frijol_Secano_ICTAOstua_WFD.RDat")
res <- lapply(Run, function(x){
end <- x$MDAT
start <- x$SDAT # SDAT, PDAT
end <- end[which(end != -99)]
start <- start[which(start != -99)]
end <- end%%1000
start <- start%%1000
dur <- ifelse(test = end > start, yes = end - start, no = 365 - start + end)
return(dur)
})
res <- do.call(c, res)
hist(res, main = "ICTA Ostua duration: old runs (MDAT - PDAT)")
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
suppressMessages(library(tidyverse))
suppressMessages(library(readxl))
suppressMessages(library(rgdal))
suppressMessages(library(sp))
suppressMessages(library(raster))
suppressMessages(library(ncdf4))
suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
ciat <- read_excel(path = paste0(root, "/gap_analysis_landraces/Input_data/_occurrence_data/_ciat_data/Bean/CIAT_BEAN_DB_2017_08_25.xlsx"), sheet = "CLEANED_FILE")
nrow(ciat) # 37987
names(ciat)
names(ciat) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name", "Test", "Vernacular.name", "Genepool", "Race.interpreted", "Race",
"Subgroup", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Days.to.flowering", "Place4", "Year", "Responsible", "First.harvest", "Last.harvest",
"Place5", "Year6", "Responsible7", "Reaction", "Responsible8", "Reaction9",
"Responsible10", "Date.evaluation", "Protein", "Responsible11")
View(ciat)
sum(ciat$Type.of.material == "Landrace", na.rm = T) # 27644
sum(!is.na(ciat$Common.names), na.rm = T) # 37987
sum(!is.na(ciat$Vernacular.name), na.rm = T) # 15784 (new one with vernacular names)
sum(ciat$Type.of.material == "Landrace" & !is.na(ciat$Vernacular.name), na.rm = T) # 27644
shp_wld <- rgdal::readOGR(dsn = paste0(root, "/gap_analysis_landraces/Input_data/_maps/Global_administrative_unit_layers/gaul_2014"), layer = "G2014_2013_1")
ciat <- ciat[which(!is.na(ciat$Longitude) & !is.na(ciat$Latitude)),]; rownames(ciat) <- 1:nrow(ciat)
nrow(ciat) # 22032 (old and original), 15784 (new one with vernacular names)
ciat <- read_excel(path = paste0(root, "/gap_analysis_landraces/Input_data/_occurrence_data/_ciat_data/Bean/CIAT_BEAN_DB_2017_08_25.xlsx"), sheet = "CLEANED_FILE")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name", "Test", "Vernacular.name", "Genepool", "Race.interpreted", "Race",
"Subgroup", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Days.to.flowering", "Place4", "Year", "Responsible", "First.harvest", "Last.harvest",
"Place5", "Year6", "Responsible7", "Reaction", "Responsible8", "Reaction9",
"Responsible10", "Date.evaluation", "Protein", "Responsible11")
View(ciat)
boxplot(ciat$Altitude ~ ciat$Genepool)
boxplot(ciat$Altitude ~ ciat$Race.interpreted)
boxplot(ciat$Altitude ~ ciat$Vernacular.name)
boxplot(ciat$Altitude ~ ciat$Subgroup)
boxplot(ciat$Seed.weight ~ ciat$Subgroup)
ciat_empyCoordinates <- ciat[which(is.na(ciat$Longitude) & is.na(ciat$Latitude)),]
names(ciat_empyCoordinates)
ciat_empyCoordinates %>% dplyr::filter((!is.na(Country) |
!is.na(Department) |
!is.na(County) |
!is.na(Place)) & !is.na(Protein)) %>% dim
ciat_empyCoordinates %>% dplyr::filter((!is.na(Country) |
!is.na(Department) |
!is.na(County) |
!is.na(Place)) & !is.na(Protein)) %>% dim
ciat_empyCoordinates <- ciat_empyCoordinates %>% dplyr::filter((!is.na(Country) |
!is.na(Department) |
!is.na(County) |
!is.na(Place)) & !is.na(Protein))
View(ciat_empyCoordinates)
write.csv(x = ciat_empyCoordinates, file = paste0("/gap_analysis_landraces/Input_data/_occurrence_data/_ciat_data/Bean/coord4georef.csv"), row.names = F)
write.csv(x = ciat_empyCoordinates, file = paste0(root, "/gap_analysis_landraces/Input_data/_occurrence_data/_ciat_data/Bean/coord4georef.csv"), row.names = F)
ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(ciat$Latitude) & !is.na(Protein)) %>% dim
ciat <- ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(ciat$Latitude) & !is.na(Protein)) %>% dim
ciat <- read_excel(path = paste0(root, "/gap_analysis_landraces/Input_data/_occurrence_data/_ciat_data/Bean/CIAT_BEAN_DB_2017_08_25.xlsx"), sheet = "CLEANED_FILE")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name", "Test", "Vernacular.name", "Genepool", "Race.interpreted", "Race",
"Subgroup", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Days.to.flowering", "Place4", "Year", "Responsible", "First.harvest", "Last.harvest",
"Place5", "Year6", "Responsible7", "Reaction", "Responsible8", "Reaction9",
"Responsible10", "Date.evaluation", "Protein", "Responsible11")
ciat <- ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(ciat$Latitude) & !is.na(Protein))
View(ciat)
View(ciat)
nrow(ciat) # 22032 (old and original), 15475 (new one with vernacular names)
View(ciat_empyCoordinates)
View(ciat)
over_res <- sp::over(SpatialPoints(coords = data.frame(lon = ciat$Longitude, lat = ciat$Latitude), proj4string = CRS(projargs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")), as(shp_wld, "SpatialPolygons"))
ciat$Wrong.coordinates <- as.numeric(is.na(over_res)); rm(over_res)
sum(ciat$Wrong.coordinates) # 153
View(ciat)
plot(shp_wld)
plot(shp_wld); points(ciat[,c("Longitude", "Latitude")], col = 4, pch = 20); points(ciat[ciat$Wrong.coordinates == 1, c("Longitude", "Latitude")], col = 2, pch = 20)
View(ciat)
rst_wld <- raster::raster(paste0(root, "/gap_analysis_landraces/Input_data/presence_data/world_body_waters_2-5.asc"))
?over
ciat$Wrong.coordinates2 <- raster::extract(x = rst_wld, y = ciat[c("Longitude", "Latitude")])
View(ciat)
sum(ciat$Wrong.coordinates) # 153 (old and original), 87 (new one with vernacular names)
sum(!is.na(ciat$Wrong.coordinates))
sum(is.na(ciat$Wrong.coordinates2))
sum(ciat$Type.of.material == "Landrace", na.rm = T) # 18474
sum(ciat$Type.of.material == "Landrace", na.rm = T) # 18474 (old and original), 12545 (new one with vernacular names)
sum(ciat$Type.of.material == "Landrace" & ciat$Wrong.coordinates == 1, na.rm = T) # 142
rm(ciat_empyCoordinates)
rm(shp_wld, rst_wld)
names(ciat)
identical(ciat$Race, ciat$Race.interpreted)
table(ciat$Race, ciat$Race.interpreted)
table(ciat$Race.interpreted)
names(ciat)
ciat2 <- ciat %>% dplyr::select(Test, Vernacular.name, Genepool, Race.interpreted, Subgroup, Altitude, Longitude, Latitude, Growth.habit, Seed.color, Seed.shape, Seed.brightness, Seed.weight, Protein)
View(ciat2)
table(ciat2$Vernacular.name)
table(ciat2$Genepool)
table(ciat2$Race.interpreted)
table(ciat2$Subgroup)
table(ciat2$Growth.habit)
table(ciat2$Seed.color)
table(ciat2$Seed.shape)
table(ciat2$Seed.shape, ciat2$Genepool)
table(ciat2$Seed.shape, ciat2$Race.interpreted)
table(ciat2$Seed.brightness)
table(ciat2$Protein)
as.character(unique(ciat2$Protein))
sort(as.character(unique(ciat2$Protein)))
ciat2 <- ciat2 %>% tidyr::separate(Seed.color, into = c("Seed.color", "Seed.color2", "Seed.color3"), sep = ",")
View(ciat2)
ciat2$Seed.color
table(ciat2$Seed.color)
ciat2$Seed.color[grep(pattern = "Crema ", x = ciat2$Seed.color)] <- "Cream"
ciat2$Seed.color[grep(pattern = "Rosaso", x = ciat2$Seed.color)] <- "Pink"
table(ciat2$Seed.color)
ciat2 <- ciat2 %>% tidyr::separate(Protein, into = c("Protein", "Protein2", "Protein3", "Protein4", "Protein5"), sep = ",")
View(ciat2)
table(ciat2$Protein)
ciat2$Protein %>% unique %>% as.character %>% sort
grep(pattern = "B\\?", x = ciat2$Protein)
ciat2$Protein[grep(pattern = "", x = ciat2$Protein)] <- NA
ciat2$Protein[grep(pattern = "B\\?", x = ciat2$Protein)] <- "B"
ciat2$Protein[grep(pattern = "C\\?", x = ciat2$Protein)] <- "C"
ciat2$Protein[grep(pattern = "Ca1\\(2D\\)?", x = ciat2$Protein)] <- "Ca1"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)?", x = ciat2$Protein)] <- "CAR"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)H1", x = ciat2$Protein)] <- "CAR, H1"
ciat2$Protein[grep(pattern = "CH \\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\?", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "H\\?", x = ciat2$Protein)] <- "H"
ciat2$Protein[grep(pattern = "H1\\(2D\\)", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H1\\?", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H2\\(2D\\)", x = ciat2$Protein)] <- "H2"
ciat2$Protein[grep(pattern = "HE\\(2D\\)", x = ciat2$Protein)] <- "HE"
ciat2$Protein[grep(pattern = "L \\(2D\\)", x = ciat2$Protein)] <- "L"
ciat2$Protein[grep(pattern = "LI\\(2D\\)", x = ciat2$Protein)] <- "LI"
ciat2$Protein[grep(pattern = "M13\\? o M4\\?", x = ciat2$Protein)] <- "M13, M4"
ciat2$Protein[grep(pattern = "P1\\?", x = ciat2$Protein)] <- "P1"
ciat2$Protein[grep(pattern = "S\\(2D\\)", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "S\\?", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "S\\?B\\?", x = ciat2$Protein)] <- "S, B"
ciat2$Protein[grep(pattern = "Sd\\(2D\\)", x = ciat2$Protein)] <- "Sd"
ciat2$Protein[grep(pattern = "SIMPLE \\?", x = ciat2$Protein)] <- "SIMPLE"
ciat2$Protein[grep(pattern = "T \\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "T\\?", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "TI1\\(2D\\)", x = ciat2$Protein)] <- "TI1"
ciat2$Protein[grep(pattern = "TI2\\(2D\\)", x = ciat2$Protein)] <- "TI2"
ciat2$Protein[grep(pattern = "To\\?", x = ciat2$Protein)] <- "To"
ciat2$Protein %>% unique %>% as.character %>% sort
ciat2 <- ciat %>% dplyr::select(Test, Vernacular.name, Genepool, Race.interpreted, Subgroup, Altitude, Longitude, Latitude, Growth.habit, Seed.color, Seed.shape, Seed.brightness, Seed.weight, Protein)
# Split colors
ciat2 <- ciat2 %>% tidyr::separate(Seed.color, into = c("Seed.color", "Seed.color2", "Seed.color3"), sep = ",")
ciat2$Seed.color[grep(pattern = "Crema ", x = ciat2$Seed.color)] <- "Cream"
ciat2$Seed.color[grep(pattern = "Rosaso", x = ciat2$Seed.color)] <- "Pink"
# ciat2$Seed.color[grep(pattern = "Blanco ", x = ciat2$Seed.color)] <- "White"
# ciat2$Seed.color[grep(pattern = "Morado ", x = ciat2$Seed.color)] <- "Purple"
# Split proteins
ciat2 <- ciat2 %>% tidyr::separate(Protein, into = c("Protein", "Protein2", "Protein3", "Protein4", "Protein5"), sep = ",")
grep(pattern = "", x = ciat2$Protein)
ciat2$Protein[grep(pattern = "", x = ciat2$Protein)]
grep(pattern = "", x = ciat2$Protein)
grep(pattern = "", x = ciat2$Protein, fixed = T)
ciat2$Protein[grep(pattern = "B\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "B\\?", x = ciat2$Protein, fixed = T)]
ciat2$Protein[grep(pattern = "B?", x = ciat2$Protein, fixed = T)]
ciat2$Protein[grep(pattern = "^B\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "^B\\?", x = ciat2$Protein)] <- "B"
ciat2$Protein[grep(pattern = "C\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "^C\\?", x = ciat2$Protein)] <- "C"
ciat2$Protein[grep(pattern = "Ca1\\(2D\\)?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "^Ca1\\(2D\\)?", x = ciat2$Protein)] <- "Ca1"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "CAR\\(2D\\)?$", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "CAR\\(2D\\)?$", x = ciat2$Protein)] <- "CAR"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)H1", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "CAR\\(2D\\)H1", x = ciat2$Protein)] <- "CAR, H1"
ciat2$Protein[grep(pattern = "CH \\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "CH \\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "CH\\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "CH\\?", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "H\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "H\\?", x = ciat2$Protein)] <- "H"
ciat2$Protein[grep(pattern = "H1\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "H1\\(2D\\)", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H1\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "H1\\?", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H2\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "H2\\(2D\\)", x = ciat2$Protein)] <- "H2"
ciat2$Protein[grep(pattern = "HE\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "HE\\(2D\\)", x = ciat2$Protein)] <- "HE"
ciat2$Protein[grep(pattern = "L \\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "L \\(2D\\)", x = ciat2$Protein)] <- "L"
ciat2$Protein[grep(pattern = "LI\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "LI\\(2D\\)", x = ciat2$Protein)] <- "LI"
ciat2$Protein[grep(pattern = "M13\\? o M4\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "M13\\? o M4\\?", x = ciat2$Protein)] <- "M13, M4"
ciat2$Protein[grep(pattern = "P1\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "P1\\?", x = ciat2$Protein)] <- "P1"
ciat2$Protein[grep(pattern = "S\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "S\\(2D\\)", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "S\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "S\\?$", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "S\\?$", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "S\\?B\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "S\\?B\\?", x = ciat2$Protein)] <- "S, B"
ciat2$Protein[grep(pattern = "Sd\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "Sd\\(2D\\)", x = ciat2$Protein)] <- "Sd"
ciat2$Protein[grep(pattern = "SIMPLE \\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "SIMPLE \\?", x = ciat2$Protein)] <- "SIMPLE"
ciat2$Protein[grep(pattern = "T \\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "T \\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "T\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "T\\?", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "TI1\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "TI1\\(2D\\)", x = ciat2$Protein)] <- "TI1"
ciat2$Protein[grep(pattern = "TI2\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "TI2\\(2D\\)", x = ciat2$Protein)] <- "TI2"
ciat2$Protein[grep(pattern = "To\\?", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "To\\?", x = ciat2$Protein)] <- "To"
ciat2$Protein %>% unique %>% as.character %>% sort
ciat2$Protein[grep(pattern = "T\\(2D\\)", x = ciat2$Protein)]
ciat2$Protein[grep(pattern = "T\\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein %>% unique %>% as.character %>% sort
ciat2$Protein[grep(pattern = "", x = ciat2$Protein, fixed = T)]
ciat2$Protein[grep(pattern = "^$", x = ciat2$Protein, fixed = T)] <- NA
ciat2 <- ciat %>% dplyr::select(Test, Vernacular.name, Genepool, Race.interpreted, Subgroup, Altitude, Longitude, Latitude, Growth.habit, Seed.color, Seed.shape, Seed.brightness, Seed.weight, Protein)
# Split colors
ciat2 <- ciat2 %>% tidyr::separate(Seed.color, into = c("Seed.color", "Seed.color2", "Seed.color3"), sep = ",")
ciat2$Seed.color[grep(pattern = "Crema ", x = ciat2$Seed.color)] <- "Cream"
ciat2$Seed.color[grep(pattern = "Rosaso", x = ciat2$Seed.color)] <- "Pink"
# ciat2$Seed.color[grep(pattern = "Blanco ", x = ciat2$Seed.color)] <- "White"
# ciat2$Seed.color[grep(pattern = "Morado ", x = ciat2$Seed.color)] <- "Purple"
# Split proteins
ciat2 <- ciat2 %>% tidyr::separate(Protein, into = c("Protein", "Protein2", "Protein3", "Protein4", "Protein5"), sep = ",")
ciat2$Protein[grep(pattern = "^B\\?", x = ciat2$Protein)] <- "B"
ciat2$Protein[grep(pattern = "^C\\?", x = ciat2$Protein)] <- "C"
ciat2$Protein[grep(pattern = "^Ca1\\(2D\\)?", x = ciat2$Protein)] <- "Ca1"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)?$", x = ciat2$Protein)] <- "CAR"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)H1", x = ciat2$Protein)] <- "CAR, H1"
ciat2$Protein[grep(pattern = "CH \\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\?", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "H\\?", x = ciat2$Protein)] <- "H"
ciat2$Protein[grep(pattern = "H1\\(2D\\)", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H1\\?", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H2\\(2D\\)", x = ciat2$Protein)] <- "H2"
ciat2$Protein[grep(pattern = "HE\\(2D\\)", x = ciat2$Protein)] <- "HE"
ciat2$Protein[grep(pattern = "L \\(2D\\)", x = ciat2$Protein)] <- "L"
ciat2$Protein[grep(pattern = "LI\\(2D\\)", x = ciat2$Protein)] <- "LI"
ciat2$Protein[grep(pattern = "M13\\? o M4\\?", x = ciat2$Protein)] <- "M13, M4"
ciat2$Protein[grep(pattern = "P1\\?", x = ciat2$Protein)] <- "P1"
ciat2$Protein[grep(pattern = "S\\(2D\\)", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "S\\?$", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "S\\?B\\?", x = ciat2$Protein)] <- "S, B"
ciat2$Protein[grep(pattern = "Sd\\(2D\\)", x = ciat2$Protein)] <- "Sd"
ciat2$Protein[grep(pattern = "SIMPLE \\?", x = ciat2$Protein)] <- "SIMPLE"
ciat2$Protein[grep(pattern = "T \\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "T\\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "T\\?", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "TI1\\(2D\\)", x = ciat2$Protein)] <- "TI1"
ciat2$Protein[grep(pattern = "TI2\\(2D\\)", x = ciat2$Protein)] <- "TI2"
ciat2$Protein[grep(pattern = "To\\?", x = ciat2$Protein)] <- "To"
ciat2$Protein %>% unique %>% as.character %>% sort
ciat2$Protein[grep(pattern = "^$", x = ciat2$Protein, fixed = T)]
ciat2$Protein2 %>% unique %>% as.character %>% sort
ciat2$Protein2[grep(pattern = " H1\\(LCG\\)", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = " H1\\(LCG\\)", x = ciat2$Protein2)] <- "H1"
ciat2$Protein2[grep(pattern = "C\\?", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "C\\?", x = ciat2$Protein2)] <- "C"
ciat2$Protein2[grep(pattern = "^Ca\\?", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^Ca\\?", x = ciat2$Protein2)] <- "Ca"
ciat2$Protein2[grep(pattern = "^CAR\\(2D\\)", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^CAR\\(2D\\)", x = ciat2$Protein2)] <- "CAR"
ciat2$Protein2[grep(pattern = "^CH\\(2D\\)", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^CH\\(2D\\)", x = ciat2$Protein2)] <- "CH"
ciat2$Protein2[grep(pattern = "^H1\\(2D", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^H1\\(2D", x = ciat2$Protein2)] <- "H1"
ciat2$Protein2[grep(pattern = "^H1\\(2D\\)", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^H1\\(2D", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^Mu\\?", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^Mu\\?", x = ciat2$Protein2)] <- "Mu"
ciat2$Protein2[grep(pattern = "^P1\\?", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^P1\\?", x = ciat2$Protein2)] <- "P1"
ciat2$Protein2[grep(pattern = "^S\\(2D", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^S\\(2D", x = ciat2$Protein2)] <- "S"
ciat2$Protein2[grep(pattern = "^T\\?", x = ciat2$Protein2)]
ciat2$Protein2[grep(pattern = "^T\\?", x = ciat2$Protein2)] <- "T"
ciat2$Protein2 %>% unique %>% as.character %>% order
ciat2$Protein2 %>% unique %>% as.character %>% sort
ciat2$Protein3 %>% unique %>% as.character %>% sort
ciat2$Protein3[grep(pattern = "^C \\(\\?\\)", x = ciat2$Protein3)] <- "C"
ciat2$Protein3[grep(pattern = "^CAR\\(2D\\)", x = ciat2$Protein3)] <- "CAR"
ciat2$Protein3[grep(pattern = "^CH\\? \\(2D\\)", x = ciat2$Protein3)] <- "CH"
ciat2$Protein3 %>% unique %>% as.character %>% sort
ciat2$Protein4 %>% unique %>% as.character %>% sort
ciat2$Protein4[grep(pattern = "", x = ciat2$Protein4)]
ciat2$Protein5 %>% unique %>% as.character %>% sort
View(ciat2)
2.5*700000
View(ciat2)
ciat2$Seed.color2 %>% unique %>% as.character %>% sort
ciat2$Seed.color2[grep(pattern = " Black", x = ciat2$Seed.color2)] <- "Black"
ciat2$Seed.color2[grep(pattern = " Brown", x = ciat2$Seed.color2)] <- "Brown"
ciat2$Seed.color2[grep(pattern = " Cream", x = ciat2$Seed.color2)] <- "Cream"
ciat2$Seed.color2[grep(pattern = " Other", x = ciat2$Seed.color2)] <- "Other"
ciat2$Seed.color2[grep(pattern = " Pink", x = ciat2$Seed.color2)] <- "Pink"
ciat2$Seed.color2[grep(pattern = " Purple", x = ciat2$Seed.color2)] <- "Purple"
ciat2$Seed.color2[grep(pattern = " Red", x = ciat2$Seed.color2)] <- "Red"
ciat2$Seed.color2[grep(pattern = " White", x = ciat2$Seed.color2)] <- "White"
ciat2$Seed.color2[grep(pattern = " Yellow", x = ciat2$Seed.color2)] <- "Yellow"
ciat2$Seed.color2 %>% unique %>% as.character %>% sort
ciat2$Seed.color3 %>% unique %>% as.character %>% sort
ciat2$Seed.color3[grep(pattern = " Black", x = ciat2$Seed.color3)] <- "Black"
ciat2$Seed.color3[grep(pattern = " Brown", x = ciat2$Seed.color3)] <- "Brown"
ciat2$Seed.color3[grep(pattern = " Cream", x = ciat2$Seed.color3)] <- "Cream"
ciat2$Seed.color3[grep(pattern = " Other", x = ciat2$Seed.color3)] <- "Other"
ciat2$Seed.color3[grep(pattern = " Pink", x = ciat2$Seed.color3)] <- "Pink"
ciat2$Seed.color3[grep(pattern = " Purple", x = ciat2$Seed.color3)] <- "Purple"
ciat2$Seed.color3[grep(pattern = " Red", x = ciat2$Seed.color3)] <- "Red"
ciat2$Seed.color3[grep(pattern = " White", x = ciat2$Seed.color3)] <- "White"
ciat2$Seed.color3[grep(pattern = " Yellow", x = ciat2$Seed.color3)] <- "Yellow"
ciat2$Seed.color3 %>% unique %>% as.character %>% sort
ciat2$Seed.color %>% as.character %>% unique %>% sort
c(ciat2$Seed.color %>% as.character %>% unique %>% sort,
ciat2$Seed.color2 %>% as.character %>% unique %>% sort,
ciat2$Seed.color3 %>% as.character %>% unique %>% sort) %>% unique %>% sort
c(ciat2$Seed.color %>% as.character %>% unique,
ciat2$Seed.color2 %>% as.character %>% unique,
ciat2$Seed.color3 %>% as.character %>% unique) %>% unique %>% sort
c(ciat2$Protein %>% as.character %>% unique,
ciat2$Protein2 %>% as.character %>% unique,
ciat2$Protein3 %>% as.character %>% unique,
ciat2$Protein4 %>% as.character %>% unique,
ciat2$Protein5 %>% as.character %>% unique) %>% unique %>% sort
i=1
paste0("ciat2$", color_list[i])
color_list <- c(ciat2$Seed.color %>% as.character %>% unique,
ciat2$Seed.color2 %>% as.character %>% unique,
ciat2$Seed.color3 %>% as.character %>% unique) %>% unique %>% sort
paste0("ciat2$", color_list[i])
paste0("ciat2$Color_", color_list[i])
for(i in 1:length(color_list)){
eval(parse(text = paste0("ciat2$Color_", color_list[i], " <- NA")))
}; rm(i)
View(ciat2)
