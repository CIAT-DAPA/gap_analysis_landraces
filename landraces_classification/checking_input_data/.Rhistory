rowSums(ciat2[,grep(pattern = "^Protein", x = names(ciat2))] %>% as.data.frame())
ciat2$Count.protein <- rowSums(ciat2[,grep(pattern = "^Protein", x = names(ciat2))] %>% as.data.frame())
boxplot(ciat2$Count.protein ~ ciat2$Genepool.lit)
table(ciat2$Genepool.lit)
View(ciat2)
View(ciat)
original <- gs_ls("Bean_landrace_name_table")
original <- gs_title("Bean_landrace_name_table")
original %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
original <- original %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(original) # 37987 (old and original), 23831 (new one with vernacular names)
genotypic_climate <- read.csv("D:/ciat_beans_filtered_with_climate.csv")
original <- gs_ls("Bean_landrace_name_table")
original <- gs_title("Bean_landrace_name_table")
original %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
original <- original %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(original) # 37987 (old and original), 23831 (new one with vernacular names)
names(original) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name.lit", "Test", "Vernacular.name.lit", "Genepool.lit", "Race.interpreted.lit", "Race",
"Subgroup.lit", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude", "Lat_geo", "Lon_geo",
"Coord.status",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight.fix", "Genepool.protein", "Race.protein", "Responsible11")
original <- original %>% select(ID, Reference)
genotypic_climate <- inner_join(x = genotypic_climate, y = original, by = "ID")
write.csv(genotypic_climate, "D:/ciat_beans_filtered_with_climate_reference.csv", row.names = F)
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
suppressMessages(library(tidyverse))
suppressMessages(library(readxl))
suppressMessages(library(rgdal))
suppressMessages(library(sp))
suppressMessages(library(raster))
suppressMessages(library(ncdf4))
suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
suppressMessages(library(googlesheets))
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
ciat <- ciat %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
ciat %>% gs_browse(ws = "Pvulgaris_CIATdb")
ciat <- ciat %>% gs_read(ws = "Pvulgaris_CIATdb")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned.by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name", "Test", "Vernacular.name",
"Genepool", "Race.interpreted", "Race", "Subgroup",
"Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Material.type", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude",
"Lat.geo", "Lon.geo", "Coord.status", "Collection.date",
"Name", "Name.2", "Institution", "Country.3", "Receipt.date",
"Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight", "Genepool.protein", "Race.protein", "Responsible.11")
ciat$Coord.status
table(ciat$Coord.status)
sum(table(ciat$Coord.status))
sum(table(ciat$Coord.status))
table(ciat$Coord.status)
ciat %>% select(Longitude, Latitude, Lon.geo, Lat.geo, Coord.status) %>% filter(Coord.status == "Georef by hand") %>% View
ciat %>% select(Longitude, Latitude, Lon.geo, Lat.geo, Coord.status) %>% filter(Coord.status == "Georef coords (No originals)") %>% View
ciat %>% select(Longitude, Latitude, Lon.geo, Lat.geo, Coord.status) %>% filter(Coord.status == "No coords") %>% View
ciat %>% select(Longitude, Latitude, Lon.geo, Lat.geo, Coord.status) %>% filter(Coord.status == "No georef coords") %>% View
table(ciat$Coord.status)
ciat %>% select(Longitude, Latitude, Lon.geo, Lat.geo, Coord.status) %>% filter(Coord.status == "THR<100 Km") %>% View
ciat %>% select(Longitude, Latitude, Lon.geo, Lat.geo, Coord.status) %>% filter(Coord.status == "THR>100 Km") %>% View
ciat <- ciat %>% filter(Coord.status != "No coords")
length(which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude)))
table(ciat$Coord.status)
which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))
table(ciat$Coord.status)
length(which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude)))
length(which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude)))
ciat$Latitude[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))] <- ciat$Lat.geo[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))]
ciat$Longitude[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))] <- ciat$Lon.geo[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))]
ciat$Lon.geo <- ciat$Lat.geo <- ciat$Coord.status <- NULL
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Pvulgaris_CIATdb")
ciat <- ciat %>% gs_read(ws = "Pvulgaris_CIATdb")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned.by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name", "Test", "Vernacular.name",
"Genepool", "Race.interpreted", "Race", "Subgroup",
"Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Material.type", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude",
"Lat.geo", "Lon.geo", "Coord.status", "Collection.date",
"Name", "Name.2", "Institution", "Country.3", "Receipt.date",
"Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight", "Genepool.protein", "Race.protein", "Responsible.11")
ciat <- ciat %>% filter(Coord.status != "No coords") # 16038
ciat$Latitude[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))] <- ciat$Lat.geo[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))]
ciat$Longitude[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))] <- ciat$Lon.geo[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))]
which(!is.na(ciat$Latitude) & is.na(ciat$Altitude)) %>% length
ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude) %>% head
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
OSys <- Sys.info()[1]
OSysPath <- switch(OSys, "Linux" = "/mnt", "Windows" = "//dapadfs")
root <- paste0(OSysPath, "/Workspace_cluster_9"); rm(Osys)
suppressMessages(library(tidyverse))
suppressMessages(library(readxl))
suppressMessages(library(rgdal))
suppressMessages(library(sp))
suppressMessages(library(raster))
suppressMessages(library(ncdf4))
suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
suppressMessages(library(googlesheets))
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Pvulgaris_CIATdb")
ciat <- ciat %>% gs_read(ws = "Pvulgaris_CIATdb")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned.by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name", "Test", "Vernacular.name",
"Genepool", "Race.interpreted", "Race", "Subgroup",
"Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Material.type", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude",
"Lat.geo", "Lon.geo", "Coord.status", "Collection.date",
"Name", "Name.2", "Institution", "Country.3", "Receipt.date",
"Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight", "Genepool.protein", "Race.protein", "Responsible.11")
# Replace empty spaces with georreferenced coordinates
ciat <- ciat %>% filter(Coord.status != "No coords") # 16038
ciat$Latitude[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))] <- ciat$Lat.geo[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))]
ciat$Longitude[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))] <- ciat$Lon.geo[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))]
which(!is.na(ciat$Latitude) & is.na(ciat$Altitude)) %>% length
ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude) %>% head
srtm <- raster::raster(paste0(OSysPath, "/data_cluster_4/observed/gridded_products/srtm/Altitude_30s/alt"))
srtm.vals <- raster::extract(x = srtm,
y = ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude))
hist(srtm.vals)
hist(ciat$Altitude)
ciat %>% ggplot(aes(x = Altitude)) + geom_density()
srtm.vals %>% ggplot(aes(x = srtm.vals)) + geom_density() # SRTM values
srtm.vals %>% data.frame
head(srtm.vals %>% data.frame)
srtm.vals %>% data.frame %>% ggplot(aes(x = .)) + geom_density() # SRTM values
max(ciat$Altitude, na.rm = T)
srtm.vals %>% data.frame %>% ggplot(aes(x = .)) + geom_density() # SRTM values
ciat$Altitude[which(!is.na(ciat$Latitude) & is.na(ciat$Altitude))] <- srtm.vals
rm(srtm.vals, srtm)
ciat <- ciat %>% filter(Altitude <= 3500)
install.packages("envirem")
library("envirem", lib.loc="~/R/win-library/3.4")
install.packages("envirem")
install.packages("envirem")
library("envirem", lib.loc="~/R/win-library/3.4")
rasterFiles <- list.files(system.file('extdata', package='envirem'), full.names=TRUE)
env <- stack(rasterFiles)
env
# identify the appropriate layers
meantemp <- grep('mean', names(env), value=TRUE)
solar <- grep('solrad', names(env), value=TRUE)
maxtemp <- grep('tmax', names(env), value=TRUE)
mintemp <- grep('tmin', names(env), value=TRUE)
meantemp <- stack(env[[meantemp]])
solar <- stack(env[[solar]])
maxtemp <- stack(env[[maxtemp]])
mintemp <- stack(env[[mintemp]])
tempRange <- abs(maxtemp - mintemp)
meantemp
# get monthly PET
pet <- monthlyPET(meantemp, solar, tempRange)
pet
precip <- grep('prec', names(env), value=TRUE)
precip <- stack(env[[precip]])
prec
precip
aridityIndexThornthwaite(precip, pet)
aridity <- aridityIndexThornthwaite(precip, pet)
plot(aridity)
library(gtools)
library(tidyverse)
rFiles <- list.files(path = "/mnt/data_cluster_4/observed/gridded_products/worldclim/Global_2_5min_v2", full.names = T)
rFiles <- rFiles[grep(pattern = "*.tif$", x = rFiles)]
library(tidyverse)
library(gtools)
meantemp <- grep('tavg', rFiles, value = T) %>% mixedsort
meantemp
rFiles <- list.files(path = "//dapadfs/data_cluster_4/observed/gridded_products/worldclim/Global_2_5min_v2", full.names = T)
rFiles <- rFiles[grep(pattern = "*.tif$", x = rFiles)]
library(tidyverse)
library(gtools)
meantemp <- grep('tavg', rFiles, value = T) %>% mixedsort
meantemp
solar
?tmpDir
tempRange
?writeRaster
pet
aridityIndex
aridityIndex <- aridityIndexThornthwaite(precip, pet)
aridityIndex
plot(aridityIndex)
g <- gc()
removeTmpFiles(h = 0)
g <- gc()
rm(list = ls())
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
OSys <- Sys.info()[1]
OSysPath <- switch(OSys, "Linux" = "/mnt", "Windows" = "//dapadfs")
root <- paste0(OSysPath, "/Workspace_cluster_9"); rm(Osys)
suppressMessages(library(tidyverse))
suppressMessages(library(readxl))
suppressMessages(library(rgdal))
suppressMessages(library(sp))
suppressMessages(library(raster))
suppressMessages(library(ncdf4))
suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
suppressMessages(library(googlesheets))
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Pvulgaris_CIATdb")
ciat <- ciat %>% gs_read(ws = "Pvulgaris_CIATdb")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned.by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name", "Test", "Vernacular.name",
"Genepool", "Race.interpreted", "Race", "Subgroup",
"Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Material.type", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude",
"Lat.geo", "Lon.geo", "Coord.status", "Collection.date",
"Name", "Name.2", "Institution", "Country.3", "Receipt.date",
"Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight", "Genepool.protein", "Race.protein", "Responsible.11")
ciat <- ciat %>% filter(Coord.status != "No coords") # 16038
ciat$Latitude[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))] <- ciat$Lat.geo[which(!is.na(ciat$Lat.geo) & is.na(ciat$Latitude))]
ciat$Longitude[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))] <- ciat$Lon.geo[which(!is.na(ciat$Lon.geo) & is.na(ciat$Longitude))]
which(!is.na(ciat$Latitude) & is.na(ciat$Altitude)) %>% length
ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude) %>% head
srtm <- raster::raster(paste0(OSysPath, "/data_cluster_4/observed/gridded_products/srtm/Altitude_30s/alt"))
srtm.vals <- raster::extract(x = srtm,
y = ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude))
ciat$Altitude[which(!is.na(ciat$Latitude) & is.na(ciat$Altitude))] <- srtm.vals
rm(srtm.vals, srtm)
ciat <- ciat %>% filter(Altitude <= 3500)
ciat %>% select(ID, Longitude, Latitude) %>% head
coord_df <- ciat %>% select(ID, Longitude, Latitude)
length((unique(coord_df$ID)))
rm(Osys)
rm(OSys)
OSysPath
paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5")
envirem <- raster::stack(paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"))
envirem <- raster(paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"))
envirem <- raster::brick(paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"))
envirem <- raster::brick(list.files(path = paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"), full.names = T))
list.files(path = paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"), full.names = T)
envirem <- list.files(path = paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"), full.names = T)
envirem <- list.files(path = paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"), full.names = T)
envirem <- envirem[grep(pattern = "*.tif$", x = envirem)]
envirem <- raster::stack(envirem)
bioVars <- list.files(paste0(OSysPath, "/data_cluster_4/observed/gridded_products/worldclim/Global_30s_v2"), full.names = T)
bioVars <- bioVars[grep(pattern = "bio", x = bioVars)]
bioVars <- bioVars[grep(pattern = "tif", x = bioVars)] %>% mixedsort
bioVars <- raster::stack(bioVars)
bioVars
bioVars <- list.files(paste0(OSysPath, "/data_cluster_4/observed/gridded_products/worldclim/Global_30s_v2"), full.names = T)
bioVars <- bioVars[grep(pattern = "bio", x = bioVars)]
bioVars <- bioVars[grep(pattern = "*.tif$", x = bioVars)] %>% mixedsort
bioVars <- raster::stack(bioVars)
envirem <- list.files(path = paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"), full.names = T)
envirem <- envirem[grep(pattern = "*.tif$", x = envirem)]
envirem <- list.files(path = paste0(root, "/gap_analysis_landraces/Input_data/_maps/_envirem2_5"), full.names = T)
envirem <- envirem[grep(pattern = "*.tif$", x = envirem)]
envirem <- raster::stack(envirem)
bioVars <- list.files(paste0(OSysPath, "/data_cluster_4/observed/gridded_products/worldclim/Global_30s_v2"), full.names = T)
bioVars <- bioVars[grep(pattern = "bio", x = bioVars)]
bioVars <- bioVars[grep(pattern = "*.tif$", x = bioVars)] %>% mixedsort
bioVars <- raster::stack(bioVars)
envirem
bioVars
envirem
bioVars
coord_envirem <- raster::extract(x = envirem, y = coord_df[,c("Longitude", "Latitude")])
coord_bioVars <- raster::extract(x = bioVars, y = coord_df[,c("Longitude", "Latitude")])
install.packages("odbc")
?
switch
clima <- readRDS("//dapadfs/Workspace_cluster_9/gap_analysis_landraces/Input_data/_occurrence_data/_ciat_data/Bean/BEAN-GRP-COORDINATES-CLIMATE.RDS")
View(clima)
plot(clima$Longitude, clima$Latitude, pch = 20)
library(tidyverse)
View(clima)
clima %>% ggplot(aes(x = Longitude, y = Latitude, colour = aridityIndexThornthwaite)) + geom_point()
library(corrplot)
corrplot(corr = cor(clima[,-1], method = "pearson"))
?cor
corrplot(corr = cor(clima[,-1], method = "pearson", use = "complete.obs"))
?corrplot
corrplot(corr = cor(clima[,-1], method = "pearson", use = "complete.obs"), order = "hclust", addrect = 2)
14434140869
setwd("E:/Buenas-1342/Iguales/P_abajo")
photos <- list.files(path = ".", full.names = T)
photos
install.packages("imager")
im <- imager::load.image(photos[1])
im
plot(im) #Parrots!
?resize
thmb <- imager::resize(im, 250, 250)
plot(thmb)
thmb
photos
raster::raster(thmb)
thmb
as.raster.cimg(thmb)
thmb[,,1]
setwd("E:/Buenas-1342/Iguales/P_abajo")
photos <- list.files(path = ".", full.names = T)
photos <- photos[grep(pattern = "*.png$", x = photos)]
photos
x = photos[[1]]
x
img <- imager::load.image(x)
img <- imager::resize(img, 250, 250)
plot(img)
r <- raster::raster(img[,,1]) # Red
g <- raster::raster(img[,,2]) # Green
b <- raster::raster(img[,,3]) # Blue
img_r <- raster::brick(r, g, b)
plot(img_r)
img_r
ggRGB(img_r, 1, 2, 3)
library(jpeg)
library(raster)
library(RStoolbox)
library(gridExtra)
ggRGB(img_r, 1, 2, 3)
photos_raster <- lapply(photos, function(x){
# img <- jpeg::readJPEG(source = x, native = F)
img <- imager::load.image(x)
img <- imager::resize(img, 250, 250)
r <- raster::raster(img[,,1]) # Red
g <- raster::raster(img[,,2]) # Green
b <- raster::raster(img[,,3]) # Blue
img_r <- raster::brick(r, g, b)
return(img_r)
})
photos_raster
photos_raster[[1]]
photos_raster[[1]][2]
photos_raster[[1]][[2]]
photos_raster <- lapply(photos, function(x){
# img <- jpeg::readJPEG(source = x, native = F)
img <- imager::load.image(x)
img <- imager::resize(img, 250, 250)
r <- raster::raster(img[,,1]) # Red
g <- raster::raster(img[,,2]) # Green
b <- raster::raster(img[,,3]) # Blue
img_r <- raster::brick(r, g, b)
names(img_r) <- c("r", "g", "b")
return(img_r)
})
gris <- photos_raster[[1]]$r - photos_raster[[1]]$b
plot(gris)
gray_rasters <- lapply(photos_raster, function(x){
grayScale <- x$r - x$b
return(grayScale)
})
gray_rasters
gray_rasters <- raster::brick(gray_rasters)
rpc <- RStoolbox::rasterPCA(gray_rasters)
ggRGB(rpc$map, 1, 2, 3, stretch = "lin", q = 0)
if(require(gridExtra)){
plots <- lapply(1:3, function(x) ggR(rpc$map, x, geom_raster = TRUE))
grid.arrange(plots[[1]], plots[[2]], plots[[3]], ncol = 2)
}
setwd("E:/Buenas-1342/Iguales/P_abajo")
photos <- list.files(path = ".", full.names = T)
photos <- photos[grep(pattern = "*.png$", x = photos)]
photos_raster <- lapply(photos, function(x){
# img <- jpeg::readJPEG(source = x, native = F)
img <- imager::load.image(x)
img <- imager::resize(img, 250, 250)
r <- raster::raster(img[,,1]) # Red
g <- raster::raster(img[,,2]) # Green
b <- raster::raster(img[,,3]) # Blue
img_r <- raster::brick(r, g, b)
names(img_r) <- c("r", "g", "b")
return(img_r)
})
# ggRGB(img_r, 1, 2, 3)
# rpc <- RStoolbox::rasterPCA(img_r)
gray_rasters <- lapply(photos_raster, function(x){
grayScale <- x$r - x$b
return(grayScale)
})
gray_rasters <- raster::brick(gray_rasters)
rpc <- RStoolbox::rasterPCA(gray_rasters)
ggRGB(rpc$map, 1, 2, 3, stretch = "lin", q = 0)
if(require(gridExtra)){
plots <- lapply(1:3, function(x) ggR(rpc$map, x, geom_raster = TRUE))
grid.arrange(plots[[1]], plots[[2]], plots[[3]], ncol = 2)
}
library("aqp", lib.loc="~/R/win-library/3.4")
profvis::profvis({ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Pvulgaris_CIATdb")
ciat <- ciat %>% gs_read(ws = "Pvulgaris_CIATdb")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)})
library(readxl)
library(lubridate)
yday(as.Date("2016-12-18"))
yday(as.Date("2016-12-10"))
yday(as.Date("2016-11-08"))
yday(as.Date("2016-09-29"))
yday(as.Date("2016-08-20"))
yday(as.Date("2016-08-28"))
install.packages("lavaan")
library(lavaan)
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
summary(fit, fit.measures=TRUE)
as.data.frame(summary(fit, fit.measures=TRUE))
as.matrix(summary(fit, fit.measures=TRUE))
lavaanSumm <- summary(fit, fit.measures=TRUE)
lavaanSumm
summary(fit, fit.measures=TRUE)
summary(fit, fit.measures=TRUE)$Variances
library(broom)
tidy(summary(fit, fit.measures=TRUE))
broom::tidy(summary(fit, fit.measures=TRUE))
broom::augment(summary(fit, fit.measures=TRUE))
broom::glance(summary(fit, fit.measures=TRUE))
broom::tidy(summary(fit, fit.measures=TRUE))
str(summary(fit, fit.measures=TRUE))
summary(fit, fit.measures=TRUE)[[1]]
install.packages("stargazer")
library("stargazer")
stargazer(summary(fit, fit.measures=TRUE))
tidy(fit)
getExtraOutput(summary(fit, fit.measures=TRUE))
library(simsem)
install.packages(simsem)
install.packages("simsem")
library(simsem)
getExtraOutput(summary(fit, fit.measures=TRUE))
summary(fit, fit.measures=F)
summary(fit, fit.measures=T)
summary(fit, fit.measures=T)
signature(object = fit, type = "free")
signature(object = fit, type = "user")
parameterEstimates(fit)
summary(fit, fit.measures=T)
View(parameterEstimates(fit))
View(fitMeasures(fit))
fitMeasures(fit)
fitmeasures(fit.measures = )
fitmeasures(fit)
standardizedSolution(fit)
lavInspect(fit)
modificationIndices(fit)
yday(as.Date("2016-08-28"))
yday(as.Date("2016-09-05"))
devtools::install_github("rstudio/tfestimators")
library(tfestimators)
# return an input_fn for a given subset of data
mtcars_input_fn <- function(data) {
input_fn(data,
features = c("disp", "cyl"),
response = "mpg")
}
mtcars_input_fn()
cols <- feature_columns(
column_numeric("disp"),
column_numeric("cyl")
)
cols
cols <- feature_columns(
column_numeric("disp", "cyl")
)
model <- linear_regressor(feature_columns = cols)
models
model
