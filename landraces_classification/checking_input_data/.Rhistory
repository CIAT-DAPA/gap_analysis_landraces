suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
suppressMessages(library(googlesheets))
## =================================================================================================================== ##
## CIAT database
## =================================================================================================================== ##
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
ciat <- ciat %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name.lit", "Test", "Vernacular.name.lit", "Genepool.lit", "Race.interpreted.lit", "Race",
"Subgroup.lit", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude", "Lat_geo", "Lon_geo",
"Coord.status",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight.fix", "Genepool.protein", "Race.protein", "Responsible11")
ciat <- ciat %>% dplyr::select(ID, Accession.number:Race.interpreted.lit, Subgroup.lit,
Genus:Coord.status, Growth.habit:Protein, Genepool.protein)
srtm <- raster::raster("//dapadfs/data_cluster_4/observed/gridded_products/srtm/Altitude_30s/alt")
srtm <- raster::raster("//dapadfs/data_cluster_4/observed/gridded_products/srtm/Altitude_30s/alt")
hist(ciat$Altitude)
plot(density(ciat$Altitude))
plot(density(na.omit(ciat$Altitude)))
dens <- density(na.omit(ciat$Altitude))
integrate(approxfun(dens), lower = 3000)
integrate(approxfun(dens), lower = 3000, upper = 5000)
integrate(approxfun(dens), lower = 3000, upper = 4000)
integrate(approxfun(dens), lower = 3000, upper = 3500)
library(raster)
srtm <- raster::raster("//dapadfs/data_cluster_4/observed/gridded_products/srtm/Altitude_30s/alt")
srtm.vals <- raster::extract(x = srtm,
y = ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude))
srtm.vals
hist(density(na.omit(ciat$Altitude)))
ciat$Altitude
ciat$Altitude %>% class
hist(density(na.omit(ciat$Altitude)))
hist(density(as.numeric(na.omit(ciat$Altitude))))
na.omit(ciat$Altitude))
na.omit(ciat$Altitude)
as.numeric(na.omit(ciat$Altitude))
density(as.numeric(na.omit(ciat$Altitude)))
plot(density(as.numeric(na.omit(ciat$Altitude))))
ciat$Altitude[which(!is.na(ciat$Latitude) & is.na(ciat$Altitude))] <- srtm.vals
plot(density(as.numeric(na.omit(ciat$Altitude))))
View(ciat)
dens <- density(na.omit(ciat$Altitude))
integrate(approxfun(dens), lower = 3000, upper = 5500)
integrate(approxfun(dens), lower = 3500, upper = 5500)
ciat <- ciat %>% filter(Altitude <= 3500)
sum(!is.na(ciat$Longitude) & !is.na(ciat$Latitude)) # Accessions with coordinates
sum(!is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions with place but without coordinates
sum(is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions without place and coordinates
names(ciat)
rm(srtm.vals, srtm)
ciat$Lon_geo <- ciat$Lat_geo <- ciat$Coord.status <- NULL
names(ciat)
sum(ciat %>% select(Genepool.lit, Race.interpreted.lit, Subgroup.lit, Altitude:Genepool.protein) %>% complete.cases)
sum(ciat %>% select(Altitude:Genepool.protein) %>% complete.cases)
predictorList <- c("Altitude", "Latitude", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight", "Protein", "Genepool.protein")
for(i in 1:length(predictorList)){
eval(parse(text = paste0("cat(sum(!is.na(ciat$Longitude) & !is.na(ciat$", predictorList[i], ")), '\n')")))
}
sum(!is.na(ciat$Vernacular.name), na.rm = T) # 4196 (new one with vernacular names)
ciat$Vernacular.name
sum(!is.na(ciat$Vernacular.name.lit))
sum(!is.na(ciat$Vernacular.name.lit) & !is.na(ciat$Longitude))
library(dismo)
biovars()
biovars
getAnywhere("biovars")
getAnywhere("biovars")[[1]]
getAnywhere("biovars")[[2]]
getAnywhere("biovars")[[3]]
getAnywhere("biovars")[[4]]
getAnywhere("biovars")[[5]]
names(ciat)
ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(Altitude) &
!is.na(Growth.habit) & !is.na(Seed.color) &
!is.na(Seed.shape) & !is.na(Seed.brightness) &
!is.na(Seed.weight) & !is.na(Protein) & !is.na(Genepool.protein)) %>% dim
ciat <- ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(Altitude) &
!is.na(Growth.habit) & !is.na(Seed.color) &
!is.na(Seed.shape) & !is.na(Seed.brightness) &
!is.na(Seed.weight) & !is.na(Protein) & !is.na(Genepool.protein)) %>% dim
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(readxl))
suppressMessages(library(rgdal))
suppressMessages(library(sp))
suppressMessages(library(raster))
suppressMessages(library(ncdf4))
suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
suppressMessages(library(googlesheets))
ciat <- gs_ls("Bean_landrace_name_table")
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
suppressMessages(library(tidyverse))
suppressMessages(library(readxl))
suppressMessages(library(rgdal))
suppressMessages(library(sp))
suppressMessages(library(raster))
suppressMessages(library(ncdf4))
suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
suppressMessages(library(googlesheets))
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
ciat <- ciat %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name.lit", "Test", "Vernacular.name.lit", "Genepool.lit", "Race.interpreted.lit", "Race",
"Subgroup.lit", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude", "Lat_geo", "Lon_geo",
"Coord.status",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight.fix", "Genepool.protein", "Race.protein", "Responsible11")
ciat <- ciat %>% dplyr::select(ID, Accession.number:Race.interpreted.lit, Subgroup.lit,
Genus:Coord.status, Growth.habit:Protein, Genepool.protein)
ciat$Latitude[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))] <- ciat$Lat_geo
ciat$Longitude[which(!is.na(ciat$Lon_geo) & is.na(ciat$Longitude))] <- ciat$Lon_geo
ciat$Lon_geo <- ciat$Lat_geo <- ciat$Coord.status <- NULL
srtm <- raster::raster("//dapadfs/data_cluster_4/observed/gridded_products/srtm/Altitude_30s/alt")
srtm.vals <- raster::extract(x = srtm,
y = ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude))
# hist(srtm.vals)
ciat$Altitude[which(!is.na(ciat$Latitude) & is.na(ciat$Altitude))] <- srtm.vals
ciat <- ciat %>% filter(Altitude <= 3500)
write.csv(x = ciat, file = "D:/ciat_beans_filtered_by_altitude.csv", row.names = F)
rm(srtm.vals, srtm)
ciat2 <- ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(Altitude) &
!is.na(Growth.habit) & !is.na(Seed.color) &
!is.na(Seed.shape) & !is.na(Seed.brightness) &
!is.na(Seed.weight) & !is.na(Protein) & !is.na(Genepool.protein))
nrow(ciat2) # 22032 (old and original), 12545 (new one with vernacular names)
View(ciat2)
View(ciat2)
write.csv(x = ciat2, file = "D:/ciat_beans_filtered_by_altitude_by_predictors.csv", row.names = F)
View(ciat2)
ciat2 <- ciat2 %>% tidyr::separate(Seed.color, into = c("Seed.color", "Seed.color2", "Seed.color3"), sep = ",")
View(ciat2)
ciat2$Seed.color[grep(pattern = "Crema ", x = ciat2$Seed.color)] <- "Cream"
ciat2$Seed.color[grep(pattern = "Rosaso", x = ciat2$Seed.color)] <- "Pink"
ciat2$Seed.color2[grep(pattern = " Black", x = ciat2$Seed.color2)] <- "Black"
ciat2$Seed.color2[grep(pattern = " Brown", x = ciat2$Seed.color2)] <- "Brown"
ciat2$Seed.color2[grep(pattern = " Cream", x = ciat2$Seed.color2)] <- "Cream"
ciat2$Seed.color2[grep(pattern = " Other", x = ciat2$Seed.color2)] <- "Other"
ciat2$Seed.color2[grep(pattern = " Pink", x = ciat2$Seed.color2)] <- "Pink"
ciat2$Seed.color2[grep(pattern = " Purple", x = ciat2$Seed.color2)] <- "Purple"
ciat2$Seed.color2[grep(pattern = " Red", x = ciat2$Seed.color2)] <- "Red"
ciat2$Seed.color2[grep(pattern = " White", x = ciat2$Seed.color2)] <- "White"
ciat2$Seed.color2[grep(pattern = " Yellow", x = ciat2$Seed.color2)] <- "Yellow"
ciat2$Seed.color3[grep(pattern = " Black", x = ciat2$Seed.color3)] <- "Black"
ciat2$Seed.color3[grep(pattern = " Brown", x = ciat2$Seed.color3)] <- "Brown"
ciat2$Seed.color3[grep(pattern = " Cream", x = ciat2$Seed.color3)] <- "Cream"
ciat2$Seed.color3[grep(pattern = " Other", x = ciat2$Seed.color3)] <- "Other"
ciat2$Seed.color3[grep(pattern = " Pink", x = ciat2$Seed.color3)] <- "Pink"
ciat2$Seed.color3[grep(pattern = " Purple", x = ciat2$Seed.color3)] <- "Purple"
ciat2$Seed.color3[grep(pattern = " Red", x = ciat2$Seed.color3)] <- "Red"
ciat2$Seed.color3[grep(pattern = " White", x = ciat2$Seed.color3)] <- "White"
ciat2$Seed.color3[grep(pattern = " Yellow", x = ciat2$Seed.color3)] <- "Yellow"
color_list <- c(ciat2$Seed.color %>% as.character %>% unique,
ciat2$Seed.color2 %>% as.character %>% unique,
ciat2$Seed.color3 %>% as.character %>% unique) %>% unique %>% sort
for(i in 1:length(color_list)){
eval(parse(text = paste0("ciat2$Color_", color_list[i], " <- 0")))
col_id <- which(ciat2$Seed.color == color_list[i] | ciat2$Seed.color2 == color_list[i] | ciat2$Seed.color3 == color_list[i])
if(length(col_id) > 0){
eval(parse(text = paste0("ciat2$Color_", color_list[i], "[col_id] <- 1")))
}
}; rm(i, col_id, color_list)
ciat2$Seed.color <- ciat2$Seed.color2 <- ciat2$Seed.color3 <- NULL
View(ciat2)
ciat2$Protein[grep(pattern = "\\?", x = ciat2$Protein)] <- NA
ciat2 <- ciat2 %>% tidyr::separate(Protein, into = c("Protein", "Protein2", "Protein3", "Protein4", "Protein5"), sep = ",")
ciat2$Protein[grep(pattern = "Ca1\\(2D\\)", x = ciat2$Protein)] <- "Ca1"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)", x = ciat2$Protein)] <- "CAR"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)H1", x = ciat2$Protein)] <- "CAR,H1"
ciat2$Protein[grep(pattern = "CH \\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "H1\\(2D\\)", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H2\\(2D\\)", x = ciat2$Protein)] <- "H2"
ciat2$Protein[grep(pattern = "HE\\(2D\\)", x = ciat2$Protein)] <- "HE"
ciat2$Protein[grep(pattern = "L \\(2D\\)", x = ciat2$Protein)] <- "L"
ciat2$Protein[grep(pattern = "LI\\(2D\\)", x = ciat2$Protein)] <- "LI"
ciat2$Protein[grep(pattern = "S\\(2D\\)", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "Sd\\(2D\\)", x = ciat2$Protein)] <- "Sd"
ciat2$Protein[grep(pattern = "T \\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "T\\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "TI1\\(2D\\)", x = ciat2$Protein)] <- "TI1"
ciat2$Protein[grep(pattern = "TI2\\(2D\\)", x = ciat2$Protein)] <- "TI2"
ciat2$Protein2[grep(pattern = " H1\\(LCG\\)", x = ciat2$Protein2)] <- "H1"
ciat2$Protein2[grep(pattern = "^CAR\\(2D\\)", x = ciat2$Protein2)] <- "CAR"
ciat2$Protein2[grep(pattern = "^CH\\(2D\\)", x = ciat2$Protein2)] <- "CH"
ciat2$Protein2[grep(pattern = "^H1\\(2D", x = ciat2$Protein2)] <- "H1"
ciat2$Protein2[grep(pattern = "^S\\(2D", x = ciat2$Protein2)] <- "S"
ciat2$Protein3[grep(pattern = "^CAR\\(2D\\)", x = ciat2$Protein3)] <- "CAR"
View(ciat2)
ciat2$Protein
unique(ciat2$Protein)
unique(ciat2$Protein2)
unique(ciat2$Protein3)
unique(ciat2$Protein4)
unique(ciat2$Protein5)
unique(ciat2$Protein6)
unique(ciat2$Protein7)
protein_list <- c(ciat2$Protein %>% as.character %>% unique,
ciat2$Protein2 %>% as.character %>% unique,
ciat2$Protein3 %>% as.character %>% unique,
ciat2$Protein4 %>% as.character %>% unique,
ciat2$Protein5 %>% as.character %>% unique) %>% unique %>% sort
protein_list <- protein_list[-1]
for(i in 1:length(protein_list)){
eval(parse(text = paste0("ciat2$Protein_", protein_list[i], " <- 0")))
protein_id <- which(ciat2$Protein == protein_list[i] | ciat2$Protein2 == protein_list[i] | ciat2$Protein3 == protein_list[i] | ciat2$Protein4 == protein_list[i] | ciat2$Protein5 == protein_list[i])
if(length(protein_id) > 0){
eval(parse(text = paste0("ciat2$Protein_", protein_list[i], "[protein_id] <- 1")))
}
}; rm(i, protein_id, protein_list)
ciat2$Protein <- ciat2$Protein2 <- ciat2$Protein3 <- ciat2$Protein4 <- ciat2$Protein5 <- NULL
View(ciat2)
shp_ame <- rgdal::readOGR(dsn = paste0("D:/Americas"), layer = "AMERICAS")
over_res <- sp::over(SpatialPoints(coords = data.frame(lon = ciat2$Longitude, lat = ciat2$Latitude), proj4string = CRS(projargs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")), as(shp_ame, "SpatialPolygons"))
over_res
ciat2$Analysis <- as.numeric(is.na(over_res)); rm(over_res)
View(ciat2)
which(ciat2$Analysis == "0")
ciat2$Analysis[which(ciat2$Analysis == "0")]
ciat2$Analysis[which(ciat2$Analysis == "0")] <- "Americas"
ciat2$Analysis[which(ciat2$Analysis == "1")] <- "World"
View(ciat2)
write.csv(x = ciat2, file = "D:/ciat_beans_filtered_by_altitude_by_predictors_by_americas.csv", row.names = F)
View(ciat2)
g <- gc()
rm(list = ls())
options(warn = -1); options(scipen = 999); g <- gc(reset = T); rm(list = ls())
OSys <- Sys.info(); OSys <- OSys[names(OSys)=="sysname"]
if(OSys == "Linux"){ root <- "/mnt/workspace_cluster_9" } else {
if(OSys == "Windows"){ root <- "//dapadfs/Workspace_cluster_9" }
}; rm(OSys)
# Load packages
suppressMessages(library(tidyverse))
suppressMessages(library(readxl))
suppressMessages(library(rgdal))
suppressMessages(library(sp))
suppressMessages(library(raster))
suppressMessages(library(ncdf4))
suppressMessages(library(rasterVis))
suppressMessages(library(htmlwidgets))
suppressMessages(library(compiler))
suppressMessages(library(leaflet))
suppressMessages(library(highcharter))
suppressMessages(library(plotly))
suppressMessages(library(d3heatmap))
suppressMessages(library(cluster))
suppressMessages(library(factoextra))
suppressMessages(library(gtools))
suppressMessages(library(googlesheets))
## =================================================================================================================== ##
## CIAT database
## =================================================================================================================== ##
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
ciat <- ciat %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name.lit", "Test", "Vernacular.name.lit", "Genepool.lit", "Race.interpreted.lit", "Race",
"Subgroup.lit", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude", "Lat_geo", "Lon_geo",
"Coord.status",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight.fix", "Genepool.protein", "Race.protein", "Responsible11")
ciat <- ciat %>% dplyr::select(ID, Accession.number:Race.interpreted.lit, Subgroup.lit,
Genus:Coord.status, Growth.habit:Protein, Genepool.protein)
length(ciat$Latitude[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))])
length(ciat$Lat_geo)
length(ciat$Lat_geo[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))])
ciat$Latitude[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))]
ciat$Lat_geo[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))]
ciat$Latitude[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))] <- ciat$Lat_geo[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))]
ciat$Longitude[which(!is.na(ciat$Lon_geo) & is.na(ciat$Longitude))] <- ciat$Lon_geo[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))]
ciat <- gs_ls("Bean_landrace_name_table")
ciat <- gs_title("Bean_landrace_name_table")
ciat %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
ciat <- ciat %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(ciat) # 37987 (old and original), 23831 (new one with vernacular names)
names(ciat) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name.lit", "Test", "Vernacular.name.lit", "Genepool.lit", "Race.interpreted.lit", "Race",
"Subgroup.lit", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude", "Lat_geo", "Lon_geo",
"Coord.status",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight.fix", "Genepool.protein", "Race.protein", "Responsible11")
ciat <- ciat %>% dplyr::select(ID, Accession.number:Race.interpreted.lit, Subgroup.lit,
Genus:Coord.status, Growth.habit:Protein, Genepool.protein)
# Replace empty spaces with georreferenced coordinates
ciat$Latitude[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))] <- ciat$Lat_geo[which(!is.na(ciat$Lat_geo) & is.na(ciat$Latitude))]
ciat$Longitude[which(!is.na(ciat$Lon_geo) & is.na(ciat$Longitude))] <- ciat$Lon_geo[which(!is.na(ciat$Lon_geo) & is.na(ciat$Longitude))]
ciat$Lon_geo <- ciat$Lat_geo <- ciat$Coord.status <- NULL
View(ciat)
ciat[ciat$ID == "10161",]
ciat[ciat$ID == "10161",] %>% View
View(ciat)
srtm <- raster::raster("//dapadfs/data_cluster_4/observed/gridded_products/srtm/Altitude_30s/alt")
srtm.vals <- raster::extract(x = srtm,
y = ciat %>% dplyr::filter(!is.na(Latitude) & is.na(Altitude)) %>% dplyr::select(Longitude, Latitude))
# hist(srtm.vals)
ciat$Altitude[which(!is.na(ciat$Latitude) & is.na(ciat$Altitude))] <- srtm.vals
plot(density(as.numeric(na.omit(ciat$Altitude))))
rm(srtm.vals, srtm)
ciat %>% filter(Altitude <= 3500) %>% dim()
write.csv(x = ciat, file = "D:/ciat_beans_filtered_by_altitude.csv", row.names = F)
sum(!is.na(ciat$Longitude) & !is.na(ciat$Latitude)) # Accessions with coordinates
sum(!is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions with place but without coordinates
sum(is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions without place and coordinates
sum(is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions without place and coordinates
is.na(ciat$Place)
is.na(ciat$Longitude)
sum(is.na(ciat$Place) & is.na(ciat$Longitude))
sum(is.na(ciat$Place) & is.na(ciat$Longitude))
plot(ciat$Longitude, ciat$Latitude)
ciat <- ciat %>% filter(Altitude <= 3500)
write.csv(x = ciat, file = "D:/ciat_beans_filtered_by_altitude.csv", row.names = F)
sum(!is.na(ciat$Longitude) & !is.na(ciat$Latitude)) # Accessions with coordinates
sum(!is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions with place but without coordinates
sum(!is.na(ciat$Longitude) & !is.na(ciat$Latitude)) # Accessions with coordinates
sum(!is.na(ciat$Longitude) & !is.na(ciat$Latitude)) # Accessions with coordinates
sum(!is.na(ciat$Longitude) & !is.na(ciat$Latitude)) # Accessions with coordinates
sum(!is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions with place but without coordinates
sum(is.na(ciat$Place) & is.na(ciat$Longitude)) # Accessions without place and coordinates
sum(ciat %>% select(Altitude:Genepool.protein) %>% complete.cases)
sum(ciat %>% select(Genepool.lit, Race.interpreted.lit, Subgroup.lit, Altitude:Genepool.protein) %>% complete.cases)
sum(!is.na(ciat$Vernacular.name.lit))
sum(!is.na(ciat$Vernacular.name.lit) & !is.na(ciat$Longitude))
sum(ciat %>% select(Altitude:Genepool.protein) %>% complete.cases)
predictorList <- c("Altitude", "Latitude", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight", "Protein", "Genepool.protein")
for(i in 1:length(predictorList)){
eval(parse(text = paste0("cat(sum(!is.na(ciat$Longitude) & !is.na(ciat$", predictorList[i], ")), '\n')")))
}
ciat2 <- ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(Altitude) &
!is.na(Growth.habit) & !is.na(Seed.color) &
!is.na(Seed.shape) & !is.na(Seed.brightness) &
!is.na(Seed.weight) & !is.na(Protein) & !is.na(Genepool.protein))
nrow(ciat2) # 22032 (old and original), 12545 (new one with vernacular names)
write.csv(x = ciat2, file = "D:/ciat_beans_filtered_by_altitude_by_predictors.csv", row.names = F)
ciat2 <- ciat %>% dplyr::filter(!is.na(Longitude) & !is.na(Altitude) &
!is.na(Growth.habit) & !is.na(Seed.color) &
!is.na(Seed.shape) & !is.na(Seed.brightness) &
!is.na(Seed.weight) & !is.na(Protein) & !is.na(Genepool.protein))
nrow(ciat2) # 22032 (old and original), 12545 (new one with vernacular names)
write.csv(x = ciat2, file = "D:/ciat_beans_filtered_by_altitude_by_predictors.csv", row.names = F)
ciat2 <- ciat2 %>% tidyr::separate(Seed.color, into = c("Seed.color", "Seed.color2", "Seed.color3"), sep = ",")
ciat2$Seed.color[grep(pattern = "Crema ", x = ciat2$Seed.color)] <- "Cream"
ciat2$Seed.color[grep(pattern = "Rosaso", x = ciat2$Seed.color)] <- "Pink"
ciat2$Seed.color2[grep(pattern = " Black", x = ciat2$Seed.color2)] <- "Black"
ciat2$Seed.color2[grep(pattern = " Brown", x = ciat2$Seed.color2)] <- "Brown"
ciat2$Seed.color2[grep(pattern = " Cream", x = ciat2$Seed.color2)] <- "Cream"
ciat2$Seed.color2[grep(pattern = " Other", x = ciat2$Seed.color2)] <- "Other"
ciat2$Seed.color2[grep(pattern = " Pink", x = ciat2$Seed.color2)] <- "Pink"
ciat2$Seed.color2[grep(pattern = " Purple", x = ciat2$Seed.color2)] <- "Purple"
ciat2$Seed.color2[grep(pattern = " Red", x = ciat2$Seed.color2)] <- "Red"
ciat2$Seed.color2[grep(pattern = " White", x = ciat2$Seed.color2)] <- "White"
ciat2$Seed.color2[grep(pattern = " Yellow", x = ciat2$Seed.color2)] <- "Yellow"
ciat2$Seed.color3[grep(pattern = " Black", x = ciat2$Seed.color3)] <- "Black"
ciat2$Seed.color3[grep(pattern = " Brown", x = ciat2$Seed.color3)] <- "Brown"
ciat2$Seed.color3[grep(pattern = " Cream", x = ciat2$Seed.color3)] <- "Cream"
ciat2$Seed.color3[grep(pattern = " Other", x = ciat2$Seed.color3)] <- "Other"
ciat2$Seed.color3[grep(pattern = " Pink", x = ciat2$Seed.color3)] <- "Pink"
ciat2$Seed.color3[grep(pattern = " Purple", x = ciat2$Seed.color3)] <- "Purple"
ciat2$Seed.color3[grep(pattern = " Red", x = ciat2$Seed.color3)] <- "Red"
ciat2$Seed.color3[grep(pattern = " White", x = ciat2$Seed.color3)] <- "White"
ciat2$Seed.color3[grep(pattern = " Yellow", x = ciat2$Seed.color3)] <- "Yellow"
color_list <- c(ciat2$Seed.color %>% as.character %>% unique,
ciat2$Seed.color2 %>% as.character %>% unique,
ciat2$Seed.color3 %>% as.character %>% unique) %>% unique %>% sort
for(i in 1:length(color_list)){
eval(parse(text = paste0("ciat2$Color_", color_list[i], " <- 0")))
col_id <- which(ciat2$Seed.color == color_list[i] | ciat2$Seed.color2 == color_list[i] | ciat2$Seed.color3 == color_list[i])
if(length(col_id) > 0){
eval(parse(text = paste0("ciat2$Color_", color_list[i], "[col_id] <- 1")))
}
}; rm(i, col_id, color_list)
ciat2$Seed.color <- ciat2$Seed.color2 <- ciat2$Seed.color3 <- NULL
# Split proteins
ciat2$Protein[grep(pattern = "\\?", x = ciat2$Protein)] <- NA
ciat2 <- ciat2 %>% tidyr::separate(Protein, into = c("Protein", "Protein2", "Protein3", "Protein4", "Protein5"), sep = ",")
ciat2$Protein[grep(pattern = "Ca1\\(2D\\)", x = ciat2$Protein)] <- "Ca1"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)", x = ciat2$Protein)] <- "CAR"
ciat2$Protein[grep(pattern = "CAR\\(2D\\)H1", x = ciat2$Protein)] <- "CAR,H1"
ciat2$Protein[grep(pattern = "CH \\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "CH\\(2D\\)", x = ciat2$Protein)] <- "CH"
ciat2$Protein[grep(pattern = "H1\\(2D\\)", x = ciat2$Protein)] <- "H1"
ciat2$Protein[grep(pattern = "H2\\(2D\\)", x = ciat2$Protein)] <- "H2"
ciat2$Protein[grep(pattern = "HE\\(2D\\)", x = ciat2$Protein)] <- "HE"
ciat2$Protein[grep(pattern = "L \\(2D\\)", x = ciat2$Protein)] <- "L"
ciat2$Protein[grep(pattern = "LI\\(2D\\)", x = ciat2$Protein)] <- "LI"
ciat2$Protein[grep(pattern = "S\\(2D\\)", x = ciat2$Protein)] <- "S"
ciat2$Protein[grep(pattern = "Sd\\(2D\\)", x = ciat2$Protein)] <- "Sd"
ciat2$Protein[grep(pattern = "T \\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "T\\(2D\\)", x = ciat2$Protein)] <- "T"
ciat2$Protein[grep(pattern = "TI1\\(2D\\)", x = ciat2$Protein)] <- "TI1"
ciat2$Protein[grep(pattern = "TI2\\(2D\\)", x = ciat2$Protein)] <- "TI2"
ciat2$Protein2[grep(pattern = " H1\\(LCG\\)", x = ciat2$Protein2)] <- "H1"
ciat2$Protein2[grep(pattern = "^CAR\\(2D\\)", x = ciat2$Protein2)] <- "CAR"
ciat2$Protein2[grep(pattern = "^CH\\(2D\\)", x = ciat2$Protein2)] <- "CH"
ciat2$Protein2[grep(pattern = "^H1\\(2D", x = ciat2$Protein2)] <- "H1"
ciat2$Protein2[grep(pattern = "^S\\(2D", x = ciat2$Protein2)] <- "S"
ciat2$Protein3[grep(pattern = "^CAR\\(2D\\)", x = ciat2$Protein3)] <- "CAR"
protein_list <- c(ciat2$Protein %>% as.character %>% unique,
ciat2$Protein2 %>% as.character %>% unique,
ciat2$Protein3 %>% as.character %>% unique,
ciat2$Protein4 %>% as.character %>% unique,
ciat2$Protein5 %>% as.character %>% unique) %>% unique %>% sort
protein_list <- protein_list[-1]
for(i in 1:length(protein_list)){
eval(parse(text = paste0("ciat2$Protein_", protein_list[i], " <- 0")))
protein_id <- which(ciat2$Protein == protein_list[i] | ciat2$Protein2 == protein_list[i] | ciat2$Protein3 == protein_list[i] | ciat2$Protein4 == protein_list[i] | ciat2$Protein5 == protein_list[i])
if(length(protein_id) > 0){
eval(parse(text = paste0("ciat2$Protein_", protein_list[i], "[protein_id] <- 1")))
}
}; rm(i, protein_id, protein_list)
ciat2$Protein <- ciat2$Protein2 <- ciat2$Protein3 <- ciat2$Protein4 <- ciat2$Protein5 <- NULL
names(ciat2)
shp_ame <- rgdal::readOGR(dsn = paste0("D:/Americas"), layer = "AMERICAS")
over_res <- sp::over(SpatialPoints(coords = data.frame(lon = ciat2$Longitude, lat = ciat2$Latitude), proj4string = CRS(projargs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")), as(shp_ame, "SpatialPolygons"))
ciat2$Analysis <- as.numeric(is.na(over_res)); rm(over_res)
ciat2$Analysis[which(ciat2$Analysis == "0")] <- "Americas"
ciat2$Analysis[which(ciat2$Analysis == "1")] <- "World"
write.csv(x = ciat2, file = "D:/ciat_beans_filtered_by_altitude_by_predictors_by_americas.csv", row.names = F)
View(ciat2)
ciat2$Count.protein <- rowsum(ciat2[,grep(pattern = "^Protein", x = names(ciat2))])
rowsum(ciat2[,grep(pattern = "^Protein", x = names(ciat2))])
grep(pattern = "^Protein", x = names(ciat2))
ciat2[,grep(pattern = "^Protein", x = names(ciat2))]
ciat2[,grep(pattern = "^Protein", x = names(ciat2))] %>% as.data.frame()
rowsum(ciat2[,grep(pattern = "^Protein", x = names(ciat2))] %>% as.data.frame())
colsum(ciat2[,grep(pattern = "^Protein", x = names(ciat2))] %>% as.data.frame())
rowSums(ciat2[,grep(pattern = "^Protein", x = names(ciat2))] %>% as.data.frame())
ciat2$Count.protein <- rowSums(ciat2[,grep(pattern = "^Protein", x = names(ciat2))] %>% as.data.frame())
boxplot(ciat2$Count.protein ~ ciat2$Genepool.lit)
table(ciat2$Genepool.lit)
View(ciat2)
View(ciat)
original <- gs_ls("Bean_landrace_name_table")
original <- gs_title("Bean_landrace_name_table")
original %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
original <- original %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(original) # 37987 (old and original), 23831 (new one with vernacular names)
genotypic_climate <- read.csv("D:/ciat_beans_filtered_with_climate.csv")
original <- gs_ls("Bean_landrace_name_table")
original <- gs_title("Bean_landrace_name_table")
original %>% gs_browse(ws = "Phaseolus_vulgaris_landraces_G")
original <- original %>% gs_read(ws = "Phaseolus_vulgaris_landraces_G")
nrow(original) # 37987 (old and original), 23831 (new one with vernacular names)
names(original) <- c("ID", "Source", "Cleaned_by", "Accession.number", "Synonyms", "Common.names",
"Interpreted.name.lit", "Test", "Vernacular.name.lit", "Genepool.lit", "Race.interpreted.lit", "Race",
"Subgroup.lit", "Reference", "Genus", "Species", "Subspecies", "Variety",
"Biological.status", "Type.of.material", "CORE.collection",
"Country", "Department", "County", "Place", "Altitude", "Latitude", "Longitude", "Lat_geo", "Lon_geo",
"Coord.status",
"Date.collection", "Name", "Name2", "Institution", "Country3",
"Date.receipt", "Growth.habit", "Seed.color", "Seed.shape", "Seed.brightness", "Seed.weight",
"Protein", "Genepool.weight.fix", "Genepool.protein", "Race.protein", "Responsible11")
original <- original %>% select(ID, Reference)
genotypic_climate <- inner_join(x = genotypic_climate, y = original, by = "ID")
write.csv(genotypic_climate, "D:/ciat_beans_filtered_with_climate_reference.csv", row.names = F)
